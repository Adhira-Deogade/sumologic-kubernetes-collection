<source>
  @type http
  port 9888
  <parse>
    @type protobuf
  </parse>
</source>
<match prometheus.metrics**>
  @type datapoint
  @label @DATAPOINT
</match>
<label @DATAPOINT>
{{- if and (eq .Capabilities.KubeVersion.Major "1") (gt (int .Capabilities.KubeVersion.Minor) 13) (lt (int .Capabilities.KubeVersion.Minor) 17) }}
  <filter prometheus.metrics**> # NOTE: Remove this filter if you are running Kubernetes 1.13 or below.
    @type grep
    <exclude>
      key @metric
      pattern /^apiserver_request_count|^apiserver_request_latencies_summary|^kubelet_runtime_operations_latency_microseconds|^kubelet_docker_operations_latency_microseconds|^kubelet_docker_operations_errors$/
    </exclude>
  </filter>
{{- end }}
  <filter prometheus.metrics**>
    @type record_modifier
    <record>
      cluster {{ .Values.sumologic.clusterName }}
    </record>
  </filter>
  <filter prometheus.metrics**>
    @type enhance_k8s_metadata
    cache_size  "#{ENV['K8S_METADATA_FILTER_CACHE_SIZE']}"
    cache_ttl  "#{ENV['K8S_METADATA_FILTER_CACHE_TTL']}"
    cache_refresh "#{ENV['K8S_METADATA_FILTER_CACHE_REFRESH']}"
  </filter>
  <filter prometheus.metrics**>
    @type prometheus_format
    relabel container_name:container,pod_name:pod
  </filter>
  <match prometheus.metrics.apiserver**>
    @type sumologic
    @id sumologic.endpoint.metrics.apiserver
    endpoint "#{ENV['SUMO_ENDPOINT_METRICS_APISERVER']}"
    @include metrics.output.conf
    <buffer>
      {{- if .Values.sumologic.fluentd.persistence.enabled }}
      @type file
      path /fluentd/buffer/events
      {{- else if eq .Values.sumologic.fluentd.buffer "file" }}
      @type file
      path /fluentd/buffer/events
      compress gzip
      {{- else }}
      @type memory
      compress gzip
      total_limit_size "#{ENV['TOTAL_LIMIT_SIZE']}"
      {{- end }}
      @include buffer.output.conf
    </buffer>

  </match>
  <match prometheus.metrics.kubelet**>
    @type sumologic
    @id sumologic.endpoint.metrics.kubelet
    endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBELET']}"
    @include metrics.output.conf
    <buffer>
      {{- if .Values.sumologic.fluentd.persistence.enabled }}
      @type file
      path /fluentd/buffer/events
      {{- else if eq .Values.sumologic.fluentd.buffer "file" }}
      @type file
      path /fluentd/buffer/events
      compress gzip
      {{- else }}
      @type memory
      compress gzip
      total_limit_size "#{ENV['TOTAL_LIMIT_SIZE']}"
      {{- end }}
      @include buffer.output.conf
    </buffer>
  </match>
  <match prometheus.metrics.container**>
    @type sumologic
    @id sumologic.endpoint.metrics.container
    endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBELET']}"
    @include metrics.output.conf
    <buffer>
      {{- if .Values.sumologic.fluentd.persistence.enabled }}
      @type file
      path /fluentd/buffer/events
      {{- else if eq .Values.sumologic.fluentd.buffer "file" }}
      @type file
      path /fluentd/buffer/events
      compress gzip
      {{- else }}
      @type memory
      compress gzip
      total_limit_size "#{ENV['TOTAL_LIMIT_SIZE']}"
      {{- end }}
      @include buffer.output.conf
    </buffer>
  </match>
  <match prometheus.metrics.controller-manager**>
    @type sumologic
    @id sumologic.endpoint.metrics.kube.controller.manager
    endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBE_CONTROLLER_MANAGER']}"
    @include metrics.output.conf
    <buffer>
      {{- if .Values.sumologic.fluentd.persistence.enabled }}
      @type file
      path /fluentd/buffer/events
      {{- else if eq .Values.sumologic.fluentd.buffer "file" }}
      @type file
      path /fluentd/buffer/events
      compress gzip
      {{- else }}
      @type memory
      compress gzip
      total_limit_size "#{ENV['TOTAL_LIMIT_SIZE']}"
      {{- end }}
      @include buffer.output.conf
    </buffer>
  </match>
  <match prometheus.metrics.scheduler**>
    @type sumologic
    @id sumologic.endpoint.metrics.kube.scheduler
    endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBE_SCHEDULER']}"
    @include metrics.output.conf
    <buffer>
      {{- if .Values.sumologic.fluentd.persistence.enabled }}
      @type file
      path /fluentd/buffer/events
      {{- else if eq .Values.sumologic.fluentd.buffer "file" }}
      @type file
      path /fluentd/buffer/events
      compress gzip
      {{- else }}
      @type memory
      compress gzip
      total_limit_size "#{ENV['TOTAL_LIMIT_SIZE']}"
      {{- end }}
      @include buffer.output.conf
    </buffer>
  </match>
  <match prometheus.metrics.state**>
    @type sumologic
    @id sumologic.endpoint.metrics.kube.state
    endpoint "#{ENV['SUMO_ENDPOINT_METRICS_KUBE_STATE']}"
    @include metrics.output.conf
    <buffer>
      {{- if .Values.sumologic.fluentd.persistence.enabled }}
      @type file
      path /fluentd/buffer/events
      {{- else if eq .Values.sumologic.fluentd.buffer "file" }}
      @type file
      path /fluentd/buffer/events
      compress gzip
      {{- else }}
      @type memory
      compress gzip
      total_limit_size "#{ENV['TOTAL_LIMIT_SIZE']}"
      {{- end }}
      @include buffer.output.conf
    </buffer>
  </match>
  <match prometheus.metrics.node**>
    @type sumologic
    @id sumologic.endpoint.metrics.node.exporter
    endpoint "#{ENV['SUMO_ENDPOINT_METRICS_NODE_EXPORTER']}"
    @include metrics.output.conf
    <buffer>
      {{- if .Values.sumologic.fluentd.persistence.enabled }}
      @type file
      path /fluentd/buffer/events
      {{- else if eq .Values.sumologic.fluentd.buffer "file" }}
      @type file
      path /fluentd/buffer/events
      compress gzip
      {{- else }}
      @type memory
      compress gzip
      total_limit_size "#{ENV['TOTAL_LIMIT_SIZE']}"
      {{- end }}
      @include buffer.output.conf
    </buffer>
  </match>
  <match prometheus.metrics**>
    @type sumologic
    @id sumologic.endpoint.metrics
    endpoint "#{ENV['SUMO_ENDPOINT_METRICS']}"
    @include metrics.output.conf
    <buffer>
      {{- if .Values.sumologic.fluentd.persistence.enabled }}
      @type file
      path /fluentd/buffer/events
      {{- else if eq .Values.sumologic.fluentd.buffer "file" }}
      @type file
      path /fluentd/buffer/events
      compress gzip
      {{- else }}
      @type memory
      compress gzip
      total_limit_size "#{ENV['TOTAL_LIMIT_SIZE']}"
      {{- end }}
      @include buffer.output.conf
    </buffer>
  </match>
</label>